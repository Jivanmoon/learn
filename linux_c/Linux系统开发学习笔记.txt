I/O：是一切实现的基础
    stdio标准IO
    sysio系统调用IO（文件IO）
stdio：FILE类型贯穿始终
    fopen()
    fclose()

    fgetc()
    fputc()
    fgets()
    fputs()
    fread()
    fwrite()

    printf()
    scanf()

    fseek()
    ftell()
    rewind()

    fflush()

    getline()如何实现使用C语言读取一行数据

    临时文件：1、如何文件名称不冲突 2、及时销毁
        tmpnam()
        tmpfile()

    fileno()：将FILE *转换为文件描述符
    fdopen():将文件描述符转换为FILE *

文件IO/系统调用IO
文件描述符（fd）是在文件IO中贯穿始终的类型
文件描述符的概念（整型数，是一个数组下表，文件描述符优先使用当前可使用范围内最小的）
文件IO操作：
    open()
    close()
    read()
    write()
    lseek()
文件IO与标准IO的区别:
    响应速度：文件IO的响应速度快，标准IO有缓冲区，现将数据放到缓冲区，之后刷新时才会从缓冲区发送到内核中真正输出
    吞吐量：标准IO的吞吐量大，文件IO没有缓冲区

IO的效率问题:
    习题：将io/sysio/mycopy.c进行更改，将BUFSIZE的值进行放大，并观察进程消耗的时间，注意性能最佳拐点出现时的BUFSIZE值，以及何时会出问题
文件共享：多个任务共同操作一个文件
    面试：写程序删除一个文件的第10行，补充函数truncate/ftruncate（用来修改文件大小）
    思路：用两个文件描述符打开同一个文件进行操作

原子操作
程序中的重定向：
    dup()
    dup2()
同步：
    sync()
    fsync()
    fdatasync()
IO管理：
    fcntl()
    ioctl()
