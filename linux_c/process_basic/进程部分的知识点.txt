                    进程基础知识
进入多进程阶段

1、进程标识符pid
    类型pid_t
    命令ps
    进程标识符是顺次向下使用（文件描述符是每次使用当前未使用的最小的值）
    getpid()
    getppid()

2、进程的产生
    fork()
        fork之后父子进程的区别：
            fork的返回值不一样
            pid不同
            ppid不同
            未决新号和文件锁不继承
            资源利用量归零
        init进程：是所有进程的祖先进程，pid为1号
        调度器的调度策略来决定那个进程先运行
        fflush()的重要性
            fork()之前需要刷新所有缓冲区，因为如果fork之前不刷新缓冲区，则在之后的子进程输出语句中可能会有缓冲区中残留的数据打印
        time命令后跟执行程序可以输出程序执行了多少时间
    vfork()

3、进程的消亡及释放资源 
    wait()
    waitpid()
    waitid()

4、exec函数族
    execl()
    execlp()
    execle()
    execv()
    execvp()
    注意：fflush的使用，一定要在切换环境前刷新缓冲区

5、用户权限及组权限(主要解释u+s,g+s怎么实现)
    实际用户权限（real）：用户本身拥有的权限
    有效用户权限（effective）：用户在执行程序过程中有的权限
    u+s
    g+s
    s权限：设置使文件在执行阶段具有文件所有者的权限，相当于临时拥有文件所有者的身份. 典型的文件是passwd. 如果一般用户执行该文件, 则在执行过程中, 该文件可以获得root权限, 从而可以更改用户的密码.
    getuid()
    geteuid()
    getgid()
    getegid()
    setuid()：设置的是有效权限
    setgid()：设置的是有效权限
    setreuid()
    setregid()
    seteuid()
    setegid()

6、观摩课：解释器文件
    解释器：shell解释器、python解释器....
    解释器文件：就是脚本文件

7、system函数
    fork+wait+exec的简单封装

8、进程会计
    acct()

9、进程时间
    times()
    

10、守护进程
    回话session：session标识sid
    终端
    setsid()：实现守护进程
    getpgid()：获取进程组id
    setpgid()：设置进程组id
    单实例的守护进程：锁文件（一般是/var/run/name.pid）
    启动脚本文件：按照系统搜索自启动文件


11、系统日志
    syslogd：系统中所有的写日志操作都有该进程实现
    openlog()
    closelog()
    syslog()