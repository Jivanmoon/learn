14.1
    区别：
    1、重载运算符必须是一个类的成员或者至少有一个参数是类类型。
    2、可以直接通过对象调用一个重载运算符，如data1.operator+(data2)。
    3、使用重载的运算符本质上是函数调用，所以这些运算符指定了运算对象的求值顺序或短路求值属性，这些规则无法应用到重载运算符上，比如逻辑运算符、关系运算符和逗号运算符，不建议使用。
    相同：
    重载运算符的优先级和结合律与对应的内置运算符保持一致。

14.2
    code

14.3
    (a)内置的==
    (b)string重载的==
    (c)vector重载的==
    (d)string重载的==

14.4
    (a) % 一般定义为非成员。
    (b) %= 一般定义为类成员，能够改变对象的状态。
    (c) ++ 一般定义为类成员，能够改变对象的状态。
    (d) -> 必须定义为类成员
    (e) << 一般定义为非成员
    (f)&& 一般定义为非成员。
    (g) == 一般定义为非成员。
    (h) () 必须定义为类成员

14.5
    code

14.6
    code in 14.2

14.7
    code

14.8
    code

14.9
    code in 14.2

14.10
    (a) 格式正确。
    (b) 不合法的输入。因为程序试图将 0-210-99999-9 转换为 float。
        但是会输出"10 24 22.8 0.95"

14.11
    有错误，没有设置输入错误检查
    会将错误的信息输入到对象中，输入的对象输出结果为"10 24 22.8 0.95"

14.12
    code

14.13
    可以定义一个减法运算符

14.14
    为了节省代码？？？

14.15
    不需要添加算术运算符，应该逻辑上不需要

14.16
    code

14.17
    略

14.18
    code

14.19
    code

14.20
    code in 14.2

14.21
    code
    性能上没有任何优势，并且代码可读性不好

14.22
    code

14.23
    code

14.24~14.25
    略

14.26
    code

14.27~14.28
    code in 14.27

14.29
    因为递增递减运算符会改变当前对象的状态

14.30
    code

14.31
    因为StrBlobPtr类不需要管理内存，因此使用合成的版本就可以

14.32
    code

14.33
    重载运算符函数的参数数量和该运算符作用的运算对象的数量一样多。函数调用运算符()最多可以传256个参数，因此在重载时，最多也能接受256个参数用作运算。

14.34
    code

14.35
    code

14.36
    code

14.37
    code

14.38
    code

14.39
    code

14.40
    code

14.41
    为了简化代码，如果要实现的功能比较简单，我就会使用lambda，功能复杂的情况下使用类

14.42
    code

14.43
    code in 14.42

14.44
    code

14.45
    code

14.46
    可以，这样能够提供使用者一种容易的途径去获取编号或价格。应该要声明为explicit，避免使用者无意中隐式转换从而产生意外的结果。

14.47
    operator const int();是将Integral隐式转换为const int类型
    operator int() const;是将Intergal隐式转换为int类型

14.48
    略

14.49
    略

14.50
    struct LongDouble {
        LongDouble (double = 0.0);
        operator double();
        operator float();
    };
    LongDouble ldObj;
    // 产生二义性：在将ldObj转换为int时，类定义的类型转换都无法精准匹配，可能先执行 operator double(), 再进行double到int的转换。
    // 也可能调用operator float()，再进行float到int的转换。
    int ex1 = ldObj;    
    // 调用operator float()   
    float ex2 = ldObj;  

14.51
    calc是会优先调用calc(int)，doube转int是标准类型转换，而LongDouble转int是用户自定义转换。

14.52
    ld = si + ld;具有二义性，调用1需将si转换为LongDouble，ld转换为SmallInt。调用2需要将si转换为LongDouble，ld转换为double。
    ld = ld + si;精确匹配LongDouble operator+ (const SmallInt&);若调用LongDouble operator+(LongDouble&, double);还需将si转换为double。

14.53
    由于内置的operator+(int, double)是可行的，同时3.14可以转换为int，然后再转换为SmallInt，所以SmallInt的成员operator+也是可行的。因为两者都需要进行类型转换，所以会产生二义性。改为：double d = s1 +SmallInt(3.14);







