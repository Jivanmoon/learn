13.1
    拷贝构造函数是第一个参数是自身类类型的引用，且任何额外参数都有默认值的构造函数
    拷贝构造函数用于：
    1、使用=定义变量时
    2、将一个对象作为实参传递给一个非引用类型的形参
    3、从一个返回类型为非引用类型的函数返回一个对象
    4、用花括号列表初始化一个数组中的元素或一个聚合类中的成员
    5、标准库容器初始化或调用其insert或push成员

13.2
    拷贝构造函数的第一个参数必须是自身类类型的引用

13.3
    StrBlob中元素复制，且智能指针计数加一。StrBlobStr中元素复制，弱指针复制不影响计数器
    拷贝StrBlob时，其shared_ptr成员的引用计数会增加。拷贝StrBlobPtr，unique_ptr成员的引用计数不变，其引用了shared_ptr，但不影响shared_ptr的引用计数
13.4
    Point global;
    Point foo_bar(Point arg) // 1
    {
        Point local = arg, *heap = new Point(global); // 2: Point local = arg,  3: Point *heap = new Point(global) 
        *heap = local; 
        Point pa[4] = { local, *heap }; // 4, 5
        return *heap;  // 6
    }
    这6个部分使用了拷贝构造函数

13.5
    code

13.6
    拷贝赋值运算符是一个名为 operator= 的函数。
    当赋值运算发生时就会用到它。
    合成拷贝赋值运算符可以用来禁止该类型对象的赋值，但其主要工作是完成赋值
    如果一个类未定义自己的拷贝赋值运算符，编译器会为它生成一个合成拷贝赋值运算符。

13.7
    StrBlob：会通过shared_ptr类的拷贝赋值运算符将shared_ptr拷贝赋值，且其计数器自增。
    StrBlobPtr：会通过weak_ptr类的拷贝赋值运算符将weak_ptr拷贝赋值。curr调用内置类型的赋值运算符。

13.8
    code

13.9
    析构函数：释放对象使用的资源，并销毁对象的非static数据成员
            析构函数是类的一个成员函数，名字波浪号接类名，没有返回值，也不接受参数，不能被重载，对一个给定类唯一
    析构函数完成什么工作：
        1、在析构函数中，首先执行函数体，然后销毁成员，成员按初始化顺序的逆序销毁
        2、不像构造函数有初始化列表，析构函数的析构部分是隐式的，成员销毁时发生什么完全依赖成员的类型
        3、销毁类类型的成员执行类类型的析构函数
        4、内置类型没有析构函数，销毁内置类型成员什么也不需要做
        5、隐式销毁一个内置指针类型的成员不会delete它所指向的对象
        6、与普通指针不同，智能指针是类类型，所以具有析构函数。智能指针成员在析构阶段会被自动销毁
    合成析构函数：
        1、当一个类未定义自己的析构函数时，编译器会为它定义一个合成析构函数
        2、对于某些类，合成析构函数被用来阻止该类型的对象被销毁
        3、一般，合成析构函数的函数体为空
        4、认识到析构函数体自身并不直接销毁成员很重要。成员是在析构函数体之后隐含的析构阶段被销毁的，在整个对象销毁过程中，析构函数体是作为成员销毁步骤之外的另一部分进行的

13.10
    当一个 StrBlob 对象被销毁时，shared_ptr 的引用计数会减少。当 StrBlobPtr 对象被销毁时，不影响引用计数。

13.11
    code

13.12
    bool fcn(const Sales_data *trans, Sales_data accum)
    {
        Sales_data item1(*trans), item2(accum);
        return item1.isbn() != item2.isbn();
    }
    函数结束时，accum,item1,item2都会调用析构函数，因此会发生三次

13.13
    code

13.14
    a,b,c的mysn成员是一样的

13.15
    会改变，会输出3个不同的数。并且这3个数并不是a、b、c当中的数。因为调用函数f的过程中也调用了拷贝构造函数

13.6
    会输出 a、b、c的数。

13.17
    code